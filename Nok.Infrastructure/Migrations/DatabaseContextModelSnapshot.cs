// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nok.Infrastructure.Data;

#nullable disable

namespace Nok.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nok.Infrastructure.Data.Models.AccessIdentifier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AzureOid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AccessIdentifiers");
                });

            modelBuilder.Entity("Nok.Infrastructure.Data.Models.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccessIdentifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccessIdentifierId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Nok.Infrastructure.Data.Models.NextOfKin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("NextOfKin");
                });

            modelBuilder.Entity("Nok.Infrastructure.Data.Models.Member", b =>
                {
                    b.HasOne("Nok.Infrastructure.Data.Models.AccessIdentifier", null)
                        .WithMany("Members")
                        .HasForeignKey("AccessIdentifierId");

                    b.OwnsOne("Nok.Infrastructure.Data.Models.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("MemberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Postcode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Town")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MemberId");

                            b1.ToTable("Members");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.OwnsOne("Nok.Infrastructure.Data.Models.ContactDetails", "ContactDetails", b1 =>
                        {
                            b1.Property<Guid>("MemberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("HomeNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MobileNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WorkNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MemberId");

                            b1.ToTable("Members");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.OwnsOne("Nok.Infrastructure.Data.Models.DateOfBirth", "DateOfBirth", b1 =>
                        {
                            b1.Property<Guid>("MemberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Day")
                                .HasColumnType("int");

                            b1.Property<int?>("Month")
                                .HasColumnType("int");

                            b1.Property<int>("Year")
                                .HasColumnType("int");

                            b1.HasKey("MemberId");

                            b1.ToTable("Members");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.OwnsOne("Nok.Infrastructure.Data.Models.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("MemberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MiddleName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Surname")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Title")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MemberId");

                            b1.ToTable("Members");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.OwnsOne("Nok.Infrastructure.Data.Models.Vehicle", "Vehicle", b1 =>
                        {
                            b1.Property<Guid>("MemberId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Colour")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Make")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Model")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Notes")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("RegistrationNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MemberId");

                            b1.ToTable("Members");

                            b1.WithOwner()
                                .HasForeignKey("MemberId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("ContactDetails")
                        .IsRequired();

                    b.Navigation("DateOfBirth")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Vehicle")
                        .IsRequired();
                });

            modelBuilder.Entity("Nok.Infrastructure.Data.Models.NextOfKin", b =>
                {
                    b.HasOne("Nok.Infrastructure.Data.Models.Member", null)
                        .WithMany("NextOfKin")
                        .HasForeignKey("MemberId");

                    b.OwnsOne("Nok.Infrastructure.Data.Models.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("NextOfKinId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Postcode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Town")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("NextOfKinId");

                            b1.ToTable("NextOfKin");

                            b1.WithOwner()
                                .HasForeignKey("NextOfKinId");
                        });

                    b.OwnsOne("Nok.Infrastructure.Data.Models.ContactDetails", "ContactDetails", b1 =>
                        {
                            b1.Property<Guid>("NextOfKinId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("HomeNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MobileNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WorkNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("NextOfKinId");

                            b1.ToTable("NextOfKin");

                            b1.WithOwner()
                                .HasForeignKey("NextOfKinId");
                        });

                    b.OwnsOne("Nok.Infrastructure.Data.Models.DateOfBirth", "DateOfBirth", b1 =>
                        {
                            b1.Property<Guid>("NextOfKinId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Day")
                                .HasColumnType("int");

                            b1.Property<int?>("Month")
                                .HasColumnType("int");

                            b1.Property<int>("Year")
                                .HasColumnType("int");

                            b1.HasKey("NextOfKinId");

                            b1.ToTable("NextOfKin");

                            b1.WithOwner()
                                .HasForeignKey("NextOfKinId");
                        });

                    b.OwnsOne("Nok.Infrastructure.Data.Models.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("NextOfKinId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MiddleName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Surname")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Title")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("NextOfKinId");

                            b1.ToTable("NextOfKin");

                            b1.WithOwner()
                                .HasForeignKey("NextOfKinId");
                        });

                    b.Navigation("Address");

                    b.Navigation("ContactDetails")
                        .IsRequired();

                    b.Navigation("DateOfBirth");

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("Nok.Infrastructure.Data.Models.AccessIdentifier", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Nok.Infrastructure.Data.Models.Member", b =>
                {
                    b.Navigation("NextOfKin");
                });
#pragma warning restore 612, 618
        }
    }
}
